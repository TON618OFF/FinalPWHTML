{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vyacheslav\\\\Study\\\\\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u043D\\u044B\\u0445 \\u043C\\u043E\\u0434\\u0443\\u043B\\u0435\\u0439\\\\practice 13\\\\json\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const history = useHistory();\n  const handleLogin = () => {\n    // Ваша логика для аутентификации пользователя\n    // Например, проверка логина и пароля, установка состояния isLoggedIn в true\n    // Для примера, сделаем простой вход по нажатию кнопки\n    // В реальном приложении замените на соответствующую логику\n    // Например, вызов API для аутентификации\n    // Или сохранение состояния аутентификации в localStorage или sessionStorage\n\n    // Предположим, пользователь успешно вошел\n    history.push('/profile'); // Переход на страницу профиля\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useHistory","jsxDEV","_jsxDEV","LoginPage","_s","history","handleLogin","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Vyacheslav/Study/Разработка программных модулей/practice 13/json/src/pages/LoginPage.js"],"sourcesContent":["// LoginPage.js\r\n\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory();\r\n\r\n  const handleLogin = () => {\r\n    // Ваша логика для аутентификации пользователя\r\n    // Например, проверка логина и пароля, установка состояния isLoggedIn в true\r\n    // Для примера, сделаем простой вход по нажатию кнопки\r\n    // В реальном приложении замените на соответствующую логику\r\n    // Например, вызов API для аутентификации\r\n    // Или сохранение состояния аутентификации в localStorage или sessionStorage\r\n\r\n    // Предположим, пользователь успешно вошел\r\n    history.push('/profile'); // Переход на страницу профиля\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h1>Вход</h1>\r\n      <button onClick={handleLogin}>Войти</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAE5B,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAD,OAAO,CAACE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA;IAAKM,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBP,OAAA;MAAAO,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbX,OAAA;MAAQY,OAAO,EAAER,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACT,EAAA,CArBID,SAAS;EAAA,QACGH,UAAU;AAAA;AAAAe,EAAA,GADtBZ,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}