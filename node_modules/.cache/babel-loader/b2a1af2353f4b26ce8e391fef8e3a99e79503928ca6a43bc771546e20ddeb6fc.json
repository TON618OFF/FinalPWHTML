{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danil\\\\Desktop\\\\test\\\\json\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/media').then(res => setData(res.data)).catch(err => console.log(err));\n  }, []);\n  const updateData = id => {\n    const updatedData = data.find(item => item.id === id); // Предположим, что у вас есть поле id в ваших данных\n    axios.put(`http://localhost:3001/media/${id}`, updatedData) // Используйте метод put для обновления данных\n    .then(res => {\n      alert(\"Data updated successfully\");\n      // Дополнительная логика после успешного обновления данных\n    }).catch(err => {\n      alert(\"Error updating data\");\n      // Дополнительная логика в случае ошибки обновления данных\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: data.map((d, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: d.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img-top\",\n          src: d.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateData(d.id),\n          children: \"Send to Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Card","_s","data","setData","get","then","res","catch","err","console","log","updateData","id","updatedData","find","item","put","alert","className","children","map","d","i","name","fileName","_jsxFileName","lineNumber","columnNumber","description","src","url","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Danil/Desktop/test/json/src/components/Card.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Card() {\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/media')\r\n        .then(res => setData(res.data))\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const updateData = (id) => {\r\n        const updatedData = data.find(item => item.id === id); // Предположим, что у вас есть поле id в ваших данных\r\n        axios.put(`http://localhost:3001/media/${id}`, updatedData) // Используйте метод put для обновления данных\r\n        .then(res => {\r\n            alert(\"Data updated successfully\");\r\n            // Дополнительная логика после успешного обновления данных\r\n        })\r\n        .catch(err => {\r\n            alert(\"Error updating data\");\r\n            // Дополнительная логика в случае ошибки обновления данных\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className=\"cards\">\r\n            {data.map((d,i) => {\r\n                return <div className=\"card\" key={i}>\r\n                    <h3 className=\"card-title\">{d.name}</h3>\r\n                    <p className=\"card-text\">{d.description}</p>\r\n                    <img className=\"card-img-top\" src={d.url} />\r\n                    <button onClick={() => updateData(d.id)}>Send to Update</button> {/* Вызов функции обновления данных при нажатии кнопки */}\r\n                </div>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAM;IACZF,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC,CACvCC,IAAI,CAACC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACJ,IAAI,CAAC,CAAC,CAC9BK,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAIC,EAAE,IAAK;IACvB,MAAMC,WAAW,GAAGX,IAAI,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;IACvDlB,KAAK,CAACsB,GAAG,CAAC,+BAA+BJ,EAAE,EAAE,EAAEC,WAAW,CAAC,CAAC;IAAA,CAC3DR,IAAI,CAACC,GAAG,IAAI;MACTW,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACJ,CAAC,CAAC,CACDV,KAAK,CAACC,GAAG,IAAI;MACVS,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBjB,IAAI,CAACkB,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;MACf,oBAAOvB,OAAA;QAAKmB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACxBpB,OAAA;UAAImB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEE,CAAC,CAACE;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC5B,OAAA;UAAGmB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEE,CAAC,CAACO;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5C5B,OAAA;UAAKmB,SAAS,EAAC,cAAc;UAACW,GAAG,EAAER,CAAC,CAACS;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5C5B,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAACU,CAAC,CAACT,EAAE,CAAE;UAAAO,QAAA,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA,GAJnCL,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK9B,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC1B,EAAA,CAjCQD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}