{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vyacheslav\\\\Study\\\\\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u043D\\u044B\\u0445 \\u043C\\u043E\\u0434\\u0443\\u043B\\u0435\\u0439\\\\practice 13\\\\json\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport LoginPage from './LoginPage'; // Подставьте компонент для страницы авторизации\nimport ProfilePage from './ProfilePage'; // Подставьте компонент для страницы профиля\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние для проверки аутентификации\n  const history = useHistory();\n  const PrivateRoute = ({\n    component: Component,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/profile\",\n          component: ProfilePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qMAwOeEFdCSWoYbaDKLqXLZ3lbU=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","useHistory","LoginPage","ProfilePage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","history","PrivateRoute","component","Component","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","exact","_c","$RefreshReg$"],"sources":["D:/Vyacheslav/Study/Разработка программных модулей/practice 13/json/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport LoginPage from './LoginPage'; // Подставьте компонент для страницы авторизации\nimport ProfilePage from './ProfilePage'; // Подставьте компонент для страницы профиля\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние для проверки аутентификации\n  const history = useHistory();\n\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) =>\n      isLoggedIn ? (\n        <Component {...props} />\n      ) : (\n        <LoginPage />\n      )\n    } />\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <PrivateRoute path=\"/profile\" component={ProfilePage} />\n          <Route exact path=\"/\">\n            {isLoggedIn ? <ProfilePage /> : <LoginPage />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,QAAQ,kBAAkB;AACrF,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMc,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,YAAY,GAAGA,CAAC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,kBACrDT,OAAA,CAACN,KAAK;IAAA,GAAKe,IAAI;IAAEC,MAAM,EAAGC,KAAK,IAC7BR,UAAU,gBACRH,OAAA,CAACQ,SAAS;MAAA,GAAKG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBf,OAAA,CAACH,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAEf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACJ;EAED,oBACEf,OAAA,CAACP,MAAM;IAAAuB,QAAA,eACLhB,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBhB,OAAA,CAACL,MAAM;QAAAqB,QAAA,gBACLhB,OAAA,CAACN,KAAK;UAACwB,IAAI,EAAC,QAAQ;UAACX,SAAS,EAAEV;QAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7Cf,OAAA,CAACM,YAAY;UAACY,IAAI,EAAC,UAAU;UAACX,SAAS,EAAET;QAAY;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDf,OAAA,CAACN,KAAK;UAACyB,KAAK;UAACD,IAAI,EAAC,GAAG;UAAAF,QAAA,EAClBb,UAAU,gBAAGH,OAAA,CAACF,WAAW;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGf,OAAA,CAACH,SAAS;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACb,EAAA,CA3BID,GAAG;EAAA,QAESL,UAAU;AAAA;AAAAwB,EAAA,GAFtBnB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}